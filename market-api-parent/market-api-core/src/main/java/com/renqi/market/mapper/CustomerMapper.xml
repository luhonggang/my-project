<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.renqi.market.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.renqi.market.entity.Customer">
    <id column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="customer_state_id" jdbcType="INTEGER" property="customerStateId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="pass_word" jdbcType="VARCHAR" property="passWord" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="expire_time" jdbcType="VARCHAR" property="expireTime" />
    <result column="level_id" jdbcType="INTEGER" property="levelId" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <resultMap id="BaseCustomerMap" type="com.renqi.market.common.BaseCustomer">
    <id column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="customer_state_id" jdbcType="INTEGER" property="customerStateId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="pass_word" jdbcType="VARCHAR" property="passWord" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="expire_time" jdbcType="VARCHAR" property="expireTime" />
    <result column="level_id" jdbcType="INTEGER" property="levelId" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
  </resultMap>
  <sql id="Base_Column_List">
    customer_id, customer_state_id, phone, pass_word, token, expire_time, level_id,
    login_time, create_time, update_time
  </sql>
  <select id="selectCustomerByPhonePwd" parameterType="java.lang.String" resultMap="BaseCustomerMap">
    SELECT customer_id,phone, pass_word, token, expire_time, level_id, login_time FROM customer
    WHERE phone = #{phone} AND pass_word = #{passWord}
  </select>

  <!-- 多个对象关联查询的结果集-->
  <resultMap id="customerPersonalAndTask" type="com.renqi.market.entity.CustomerTaskInfo">
    <id column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="customer_state_id" jdbcType="INTEGER" property="customerStateId" />
    <result column="level_id" jdbcType="INTEGER" property="levelId" />
   <!-- <result column="pass_word" jdbcType="VARCHAR" property="passWord" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="expire_time" jdbcType="VARCHAR" property="expireTime" />-->
    <association property="customerState" javaType="com.renqi.market.entity.CustomerState">
      <result column="customer_id" jdbcType="INTEGER" property="customerId" />
      <result column="total_task" jdbcType="INTEGER" property="totalTask" />
      <result column="total_money" jdbcType="DOUBLE" property="totalMoney" />
      <result column="is_recharge" jdbcType="INTEGER" property="isRecharge" />
      <result column="expired_time" jdbcType="VARCHAR" property="expiredTime" />
    </association>
    <association property="customerLevel" javaType="com.renqi.market.entity.CustomerLevel">
      <!--<id column="level_id" jdbcType="INTEGER" property="levelId" />-->
      <result column="customer_id" jdbcType="INTEGER" property="customerId" />
      <result column="level_name" jdbcType="VARCHAR" property="levelName" />
      <result column="level_desc" jdbcType="VARCHAR" property="levelDesc" />
    </association>
    <collection property="customerShop" javaType="com.renqi.market.entity.CustomerShop">
      <id column="shop_id" jdbcType="INTEGER" property="shopId" />
      <result column="customer_id" jdbcType="INTEGER" property="customerId" />
      <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
      <result column="shop_no" jdbcType="VARCHAR" property="shopNo" />
    </collection>
    <collection property="taskList" ofType="com.renqi.market.entity.CustomerTask">
      <id column="task_id" jdbcType="INTEGER" property="taskId" />
      <result column="customer_id" jdbcType="INTEGER" property="customerId" />
      <result column="task_state" javaType="INTEGER" property="taskState"/>
      <result column="task_type" jdbcType="VARCHAR" property="taskType" />
      <result column="good_id" jdbcType="INTEGER" property="goodId" />
    </collection>
  </resultMap>
  <!--查询出个人信息，商铺信息，任务充值信息-->
  <select id="queryCustomerMsg" parameterType="String" resultMap="customerPersonalAndTask">
    SELECT
        cu.customer_id,cu.phone,cu.customer_state_id,cu.level_id,
        state.total_task,state.total_money,state.is_recharge,state.expired_time,
        lev.level_name,lev.level_desc,shop.shop_name,shop.shop_no,
        task.task_id,task.task_type,task.task_state,task.good_id
    FROM customer cu
    INNER JOIN customer_state state ON cu.customer_state_id = state.customer_state_id
    INNER JOIN customer_level lev   ON cu.level_id = lev.level_id
    LEFT  JOIN customer_shop shop   ON cu.customer_id = shop.customer_id
    LEFT  JOIN customer_task task   ON cu.customer_id = task.customer_id
    WHERE cu.customer_id = #{customerId}
  </select>


  <update id="updateCustomerToken" parameterType="com.renqi.market.common.BaseCustomer">
    UPDATE customer
    <set>
      <if test="token != null">
        token = #{token},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime},
      </if>
      <if test="loginTime != null">
        login_time = NOW(),
      </if>
      <if test="updateTime != null">
        update_time = NOW()
      </if>
    </set>
    WHERE customer_id = #{customerId}
  </update>
  <!-- 检查手机号码 是否注册过-->
  <select id="checkMobileIsRegister" parameterType="java.lang.String" resultType="int">
    SELECT  COUNT(*) as number FROM `customer` WHERE phone = #{phone}
  </select>

  <select id="selectCustomerList" resultMap="BaseResultMap">
    SELECT  customer_id, phone, pass_word, token, expire_time, level_id, login_time,
    create_time, update_time FROM  customer
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where customer_id = #{customerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where customer_id = #{customerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.renqi.market.entity.Customer">
    <selectKey keyProperty="customerId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (customer_id, customer_state_id, phone,
      pass_word, token, expire_time,
      level_id, shop_id, login_time,
      create_time, update_time)
    values (#{customerId,jdbcType=INTEGER}, #{customerStateId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR},
      #{passWord,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{expireTime,jdbcType=VARCHAR},
      #{levelId,jdbcType=INTEGER}, #{shopId,jdbcType=BIGINT}, #{loginTime,jdbcType=TIMESTAMP},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.renqi.market.entity.Customer">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerStateId != null">
        customer_state_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="passWord != null">
        pass_word,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
      <if test="levelId != null">
        level_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="customerStateId != null">
        #{customerStateId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null">
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.renqi.market.entity.Customer">
    update customer
    <set>
      <if test="customerStateId != null">
        customer_state_id = #{customerStateId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        pass_word = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null">
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.renqi.market.entity.Customer">
    update customer
    set customer_state_id = #{customerStateId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      pass_word = #{passWord,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      expire_time = #{expireTime,jdbcType=VARCHAR},
      level_id = #{levelId,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=BIGINT},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
</mapper>