<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.renqi.market.dao.CustomerLevelMapper">
  <resultMap id="BaseResultMap" type="com.renqi.market.entity.CustomerLevel">
    <id column="level_id" jdbcType="INTEGER" property="levelId" />
    <result column="level_name" jdbcType="VARCHAR" property="levelName" />
    <result column="level_desc" jdbcType="VARCHAR" property="levelDesc" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="expiried_time" jdbcType="TIMESTAMP" property="expiriedTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    level_id, level_name, level_desc, money, expiried_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer_level
    where level_id = #{levelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer_level
    where level_id = #{levelId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.renqi.market.entity.CustomerLevel">
    insert into customer_level (level_id, level_name, level_desc, 
      money, expiried_time, create_time
      )
    values (#{levelId,jdbcType=INTEGER}, #{levelName,jdbcType=VARCHAR}, #{levelDesc,jdbcType=VARCHAR}, 
      #{money,jdbcType=DOUBLE}, #{expiriedTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.renqi.market.entity.CustomerLevel">
    insert into customer_level
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="levelId != null">
        level_id,
      </if>
      <if test="levelName != null">
        level_name,
      </if>
      <if test="levelDesc != null">
        level_desc,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="expiriedTime != null">
        expiried_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="levelId != null">
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="levelName != null">
        #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="levelDesc != null">
        #{levelDesc,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="expiriedTime != null">
        #{expiriedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.renqi.market.entity.CustomerLevel">
    update customer_level
    <set>
      <if test="levelName != null">
        level_name = #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="levelDesc != null">
        level_desc = #{levelDesc,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="expiriedTime != null">
        expiried_time = #{expiriedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where level_id = #{levelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.renqi.market.entity.CustomerLevel">
    update customer_level
    set level_name = #{levelName,jdbcType=VARCHAR},
      level_desc = #{levelDesc,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      expiried_time = #{expiriedTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where level_id = #{levelId,jdbcType=INTEGER}
  </update>
</mapper>